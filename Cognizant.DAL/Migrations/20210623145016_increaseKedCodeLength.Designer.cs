// <auto-generated />
using System;
using Cognizant.DAL.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cognizant.DAL.Migrations
{
    [DbContext(typeof(ProgrammingTasksContext))]
    [Migration("20210623145016_increaseKedCodeLength")]
    partial class increaseKedCodeLength
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cognizant.DAL.Tables.GameStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("PlayerName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("GameStats");
                });

            modelBuilder.Entity("Cognizant.DAL.Tables.ProgrammingLanguages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaseSolutionCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("KeyCode")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProgrammingLanguages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaseSolutionCode = "public class MyClass {  public static void main(String args[]) {                }}",
                            CreatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 526, DateTimeKind.Local).AddTicks(989),
                            IsActive = true,
                            KeyCode = "java",
                            Name = "JAVA",
                            UpdatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 532, DateTimeKind.Local).AddTicks(4097)
                        },
                        new
                        {
                            Id = 2,
                            BaseSolutionCode = "<?php ,         \r\n                                          \r\n                                             ?> ",
                            CreatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 532, DateTimeKind.Local).AddTicks(5660),
                            IsActive = true,
                            KeyCode = "php",
                            Name = "PHP",
                            UpdatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 532, DateTimeKind.Local).AddTicks(5680)
                        });
                });

            modelBuilder.Entity("Cognizant.DAL.Tables.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedOutPut")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputParameter")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 534, DateTimeKind.Local).AddTicks(7032),
                            Description = "Given a number n, print n-th Fibonacci Number.",
                            ExpectedOutPut = "34",
                            InputParameter = "9",
                            IsActive = true,
                            Name = "Fibonacci Series",
                            UpdatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 534, DateTimeKind.Local).AddTicks(7077)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 534, DateTimeKind.Local).AddTicks(7086),
                            Description = "Program to find sum of elements in a given array elements InputArray 12,3,4,15",
                            ExpectedOutPut = "34",
                            InputParameter = "0",
                            IsActive = true,
                            Name = "Sum of elements array",
                            UpdatedDate = new DateTime(2021, 6, 23, 16, 50, 15, 534, DateTimeKind.Local).AddTicks(7090)
                        });
                });

            modelBuilder.Entity("Cognizant.DAL.Tables.GameStats", b =>
                {
                    b.HasOne("Cognizant.DAL.Tables.Tasks", "Task")
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });
#pragma warning restore 612, 618
        }
    }
}
